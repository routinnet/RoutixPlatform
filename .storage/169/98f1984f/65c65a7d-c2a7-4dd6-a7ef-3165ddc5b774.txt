$ cd /workspace/backend && python test_api.py
Traceback (most recent call last):
  File "/workspace/backend/test_api.py", line 9, in <module>
    from app.main import app
  File "/workspace/backend/app/main.py", line 15, in <module>
    from app.core.config import settings
  File "/workspace/backend/app/core/config.py", line 8, in <module>
    from pydantic import AnyHttpUrl, BaseSettings, PostgresDsn, validator
  File "/data/.cache/python/lib/python3.10/site-packages/pydantic/__init__.py", line 363, in __getattr__
    return _getattr_migration(attr_name)
  File "/data/.cache/python/lib/python3.10/site-packages/pydantic/_migration.py", line 296, in wrapper
    raise PydanticImportError(
pydantic.errors.PydanticImportError: `BaseSettings` has been moved to the `pydantic-settings` package. See https://docs.pydantic.dev/2.5/migration/#basesettings-has-moved-to-pydantic-settings for more details.

For further information visit https://errors.pydantic.dev/2.5/u/import-error
$ cd /workspace/backend && pip install redis==5.0.1 celery==5.3.4 flower==2.0.1

bash: /data/.cache/python/bin/pip: /workspace/routix-platform/backend/venv/bin/python3: bad interpreter: No such file or directory
$ chmod +x /workspace/backend/scripts/start_celery.sh

$ chmod +x /workspace/backend/scripts/stop_celery.sh

$ cd /workspace/backend && pip install flower==2.0.1 psutil==5.9.6

bash: /data/.cache/python/bin/pip: /workspace/routix-platform/backend/venv/bin/python3: bad interpreter: No such file or directory
$ cd /workspace/backend && python scripts/test_redis_celery.py

Traceback (most recent call last):
  File "/workspace/backend/scripts/test_redis_celery.py", line 7, in <module>
    from app.services.redis_service import redis_service
ModuleNotFoundError: No module named 'app'
$ cd /workspace/backend && ./scripts/start_celery.sh all

[0;34m[2025-10-07 17:02:29] INFO: Checking Redis connection...[0m
[0;31m[2025-10-07 17:02:30] ERROR: Redis is not running or not accessible[0m
[0;34m[2025-10-07 17:02:30] INFO: Please start Redis server: redis-server[0m
$ cd /workspace/backend && sleep 5 && ./scripts/start_celery.sh status

[0;34m[2025-10-07 17:02:35] INFO: Celery Services Status:[0m

[1;33m[2025-10-07 17:02:36] WARNING: Worker: Not running[0m
[1;33m[2025-10-07 17:02:36] WARNING: Beat: Not running[0m
[1;33m[2025-10-07 17:02:36] WARNING: Flower: Not running[0m

[0;34m[2025-10-07 17:02:36] INFO: Active queues and tasks:[0m
[1;33m[2025-10-07 17:02:37] WARNING: No active workers found[0m
$ cd /workspace/backend && python -c "
from app.workers.test_tasks import test_basic_task, health_check_task
import time

print('üöÄ Testing Celery task execution...')

# Test basic task
print('Queuing basic task...')
result = test_basic_task.delay('Hello from Celery test!')
print(f'Task ID: {result.id}')

# Wait for result
print('Waiting for result...')
try:
    task_result = result.get(timeout=30)
    print(f'‚úÖ Task completed: {task_result}')
except Exception as e:
    print(f'‚ùå Task failed: {e}')

# Test health check
print('\\nTesting health check task...')
health_result = health_check_task.delay()
try:
    health_data = health_result.get(timeout=10)
    print(f'‚úÖ Health check: {health_data}')
except Exception as e:
    print(f'‚ùå Health check failed: {e}')
"

Traceback (most recent call last):
  File "<string>", line 2, in <module>
  File "/workspace/backend/app/workers/test_tasks.py", line 8, in <module>
    from app.workers.celery_app import celery_app
  File "/workspace/backend/app/workers/celery_app.py", line 6, in <module>
    from app.core.config import settings
  File "/workspace/backend/app/core/config.py", line 8, in <module>
    from pydantic import AnyHttpUrl, BaseSettings, PostgresDsn, validator
  File "/data/.cache/python/lib/python3.10/site-packages/pydantic/__init__.py", line 363, in __getattr__
    return _getattr_migration(attr_name)
  File "/data/.cache/python/lib/python3.10/site-packages/pydantic/_migration.py", line 296, in wrapper
    raise PydanticImportError(
pydantic.errors.PydanticImportError: `BaseSettings` has been moved to the `pydantic-settings` package. See https://docs.pydantic.dev/2.5/migration/#basesettings-has-moved-to-pydantic-settings for more details.

For further information visit https://errors.pydantic.dev/2.5/u/import-error
$ cd /workspace/backend && curl -s http://localhost:5555/api/workers | python -m json.tool || echo "Flower dashboard not yet accessible"

Expecting value: line 1 column 1 (char 0)
Flower dashboard not yet accessible
$ cd /workspace/backend && pip install google-generativeai==0.3.2 openai==1.3.7 pillow==10.1.0

bash: /data/.cache/python/bin/pip: /workspace/routix-platform/backend/venv/bin/python3: bad interpreter: No such file or directory
$ cd /workspace/backend && python scripts/test_ai_service.py

Traceback (most recent call last):
  File "/workspace/backend/scripts/test_ai_service.py", line 8, in <module>
    from app.services.ai_service import vision_ai_service, AIServiceError
ModuleNotFoundError: No module named 'app'
$ cd /workspace/backend && python -c "
from app.api.v1.endpoints.ai import router
from app.services.ai_service import vision_ai_service
from app.services.embedding_service import embedding_service
print('‚úÖ AI endpoints imported successfully')
print('‚úÖ Vision AI service initialized')
print('‚úÖ Embedding service initialized')
print('‚úÖ All AI components working')
"

Traceback (most recent call last):
  File "<string>", line 2, in <module>
  File "/workspace/backend/app/api/v1/endpoints/ai.py", line 7, in <module>
    from app.services.ai_service import vision_ai_service, AIServiceError
  File "/workspace/backend/app/services/ai_service.py", line 16, in <module>
    from app.core.config import settings
  File "/workspace/backend/app/core/config.py", line 6, in <module>
    from pydantic_settings import BaseSettings
  File "/opt/conda/envs/mgx-chat/lib/python3.10/site-packages/pydantic_settings/__init__.py", line 1, in <module>
    from .main import BaseSettings, CliApp, SettingsConfigDict
  File "/opt/conda/envs/mgx-chat/lib/python3.10/site-packages/pydantic_settings/main.py", line 12, in <module>
    from pydantic._internal._signature import _field_name_for_signature
ModuleNotFoundError: No module named 'pydantic._internal._signature'
